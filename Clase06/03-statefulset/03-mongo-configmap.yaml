apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-init
data:
  init.sh: |
    #!/bin/bash
    # Need to wait for the readiness health check to pass so that the
    # mongo names resolve. This is kind of wonky.
    echo "PING TO MONGO-0.SERVICE.MONGO"
    until ping -c 1 ${HOSTNAME}.service-mongo; do
      echo "waiting for DNS (${HOSTNAME}.sevice-mongo)..."
      sleep 2
    done
    echo "PING DONE"
    until /usr/bin/mongo --eval 'printjson(db.serverStatus())'; do
      echo "connecting to local mongo..."
      sleep 2
    done
    if [[ "${HOSTNAME}" != 'mongo-0' ]]; then
      until ping -c 1 mongo-0.service-mongo; do
        echo "waiting for DNS (mongo-0.sevice-mongo)..."
        sleep 2
      done
    fi

    echo "connected to local."
    HOST=mongo-0.service-mongo:27017
    until /usr/bin/mongo --host=${HOST} --eval 'printjson(db.serverStatus())'; do
      echo "connecting to remote mongo..."
      sleep 2
    done
    echo "connected to remote."
    echo "HOSTNAME"
    echo "${HOSTNAME}"
    if [[ "${HOSTNAME}" != 'mongo-0' ]]; then
      until /usr/bin/mongo --host=${HOST} --eval="printjson(rs.status())" \
            | grep -v "no replset config has been received"; do
        echo "waiting for replication set initialization"
        sleep 2
      done
      echo "adding self to mongo-0"
      /usr/bin/mongo --host=${HOST} \
         --eval="printjson(rs.add('${HOSTNAME}.service-mongo'))"
    fi
    if [[ "${HOSTNAME}" == 'mongo-0' ]]; then
      echo "initializing replica set"
      /usr/bin/mongo --eval="printjson(rs.initiate(\
          {'_id': 'rs0', 'members': [{'_id': 0, \
           'host': 'mongo-0.service-mongo:27017'}]}))"
    fi
    echo "initialized"
    echo ${HOSTNAME}.service-mongo    
    while true; do
      sleep 3600
    done
