apiVersion: v1
kind: ConfigMap
metadata:
  name: vars
  labels:
    app: frontend
data:
  html: |
    <html>
      <body>
        <h1>Home</h1>
      </body>
    </html>
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-nginx-1
  labels:
    env: dev
    app: frontend
spec:
  containers:
    - name: web
      image: nginx:alpine
      volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: www-volume
  volumes:
    - name: www-volume
      persistentVolumeClaim:
        claimName: my-host-volume-claim
    - name: nginx-vol
      configMap:
        name: vars
        items:
          - key: html
            path: index.html
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-nginx-2
  labels:
    env: dev
    app: frontend
spec:
  containers:
    - name: web
      image: nginx:alpine
      volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: www-volume
  volumes:
    - name: www-volume
      persistentVolumeClaim:
        claimName: my-host-volume-claim
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: my-host-volume
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /test
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-host-volume-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: svc-frontend
spec:
  type: ClusterIP
  selector:
    app: frontend
    env: dev
  ports:
    - port: 9000
      targetPort: 80
      protocol: TCP
      name: port-web
